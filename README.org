* 基本安装
适用于没有安装任何 emacs 扩展的情况，直接在终端执行
#+begin_src bash
$ ./install-sh
#+end_src

基本安装完成之后，可以按以下说明执行其他高级配置。

* 启用 el-get
#+begin_src bash
$ cd ~/.emacs.d/my-lisp
$ mv K102-el-get.el S102-el-get.el
#+end_src

* yasnippet 配置
1. 启用 el-get 配置，安装 =yasnippet-snippets=
2. 开启 yasnippet 配置

#+begin_src
$ cd ~/.emacs.d/my-lisp
$ mv K104-yasnippet.el S104-yasnippet.el
#+end_src

其他更多信息参考 [[https://github.com/joaotavora/yasnippet][官网]]

* neotree 配置
1. 启用 el-get 配置，安装 =neotree=
2. 开启 neotree 配置
#+begin_src
$ cd ~/.emacs.d/my-lisp
$ mv K108-neotree.el S108-neotree.el
#+end_src

* vterm 配置
1. 启用 el-get 配置，安装 =vterm=, 注意 emacs 必须支持模块，检查 =module-file-suffix= 变量是否为 nil。且安装了 cmake, libtool-bin。
2. 将以下代码复制到 ~/.bashrc 中。
#+begin_src bash
vterm_printf() {
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ]); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

vterm_prompt_end(){
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)"
}
PS1=$PS1'\[$(vterm_prompt_end)\]'
#+end_src

* mc 配置
启用 el-get 配置，安装 =multiple-cursors=, 然后 =mv K112-mc.el S112-mc.el=

* 字体配置
安装 monaco 和 noto 字体，然后 =mv K114-font.el S114-font.el=

* 启用全部插件
1. 安装 cmake libtool libtool-bin rename(perl 版本)
2. 用 el-get 安装 =yasnippet-snippets, vterm, neotree, multiple-cursors=
3. 启用所有配置
#+begin_src bash
$ rename -d "s/^K/S/" ~/.emacs.d/my-lisp/K*.el
#+end_src
